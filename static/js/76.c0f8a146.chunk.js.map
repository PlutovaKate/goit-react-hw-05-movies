{"version":3,"file":"static/js/76.c0f8a146.chunk.js","mappings":"yNACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAsF,sBAAtF,EAA0H,0B,SCoD1H,EAhDa,WACX,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IARAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcH,GACXI,MAAK,SAAAC,GACJN,EAAaM,EAAKC,KACnB,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACT,IAECF,EAIL,OACE,yBACGA,EAAUY,OAAS,GAClB,eAAIC,UAAWC,EAAf,SACGd,EAAUe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,aAApB,OACb,gBAAaN,UAAWC,EAAxB,UACGK,GACC,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,EACLJ,UAAWC,EACXQ,MAAM,SAGR,gBAAKT,UAAWC,EAAhB,8BAEF,4BACE,wBACE,uBAAIG,OAEN,mCAAWC,UAfNF,EADI,OAsBjB,6CAIP,C,uJCnDD,IAAMO,EAAU,mCACVC,EAAM,gCAEL,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAAqCD,IAAWjB,MAAK,SAAAqB,GAAG,OAClEA,EAAIC,MAD8D,GAGrE,CAEM,SAASC,EAAcb,GAC5B,OAAOU,MAAM,GAAD,OAAIF,EAAJ,iBAAgBR,EAAhB,oBAA8BO,IAAWjB,MAAK,SAAAqB,GAAG,OAAIA,EAAIC,MAAR,GAC9D,CAEM,SAASE,EAAkBC,GAChC,OAAOL,MAAM,GAAD,OACPF,EADO,gCACoBD,EADpB,kBACqCQ,EADrC,oBAEVzB,MAAK,SAAAqB,GAAG,OAAIA,EAAIC,MAAR,GACX,CAEM,SAASvB,EAAcW,GAC5B,OAAOU,MAAM,GAAD,OAAIF,EAAJ,iBAAgBR,EAAhB,4BAAsCO,IAAWjB,MAAK,SAAAqB,GAAG,OACnEA,EAAIC,MAD+D,GAGtE,CAEM,SAASI,EAAgBhB,GAC9B,OAAOU,MAAM,GAAD,OAAIF,EAAJ,iBAAgBR,EAAhB,4BAAsCO,IAAWjB,MAAK,SAAAqB,GAAG,OACnEA,EAAIC,MAD+D,GAGtE,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/services/fetchMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castCard\":\"Cast_castCard__m8Shz\",\"imgCast\":\"Cast_imgCast__6GiEC\",\"imgNotFound\":\"Cast_imgNotFound__9QHx1\"};","import { React, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from 'components/services/fetchMoviesApi';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [castMovie, setCastMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMoviesCast(movieId)\n      .then(data => {\n        setCastMovie(data.cast);\n      })\n      .catch(console.log);\n  }, [movieId]);\n\n  if (!castMovie) {\n    return;\n  }\n\n  return (\n    <div>\n      {castMovie.length > 0 ? (\n        <ul className={css.cast}>\n          {castMovie.map(({ id, name, actor, profile_path }) => (\n            <li key={id} className={css.castCard}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                  alt={name}\n                  className={css.imgCast}\n                  width=\"100\"\n                />\n              ) : (\n                <div className={css.imgNotFound}>Image not found</div>\n              )}\n              <div>\n                <p>\n                  <b>{name}</b>\n                </p>\n                <p>Actor: {actor}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div>No casts found</div>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","const API_KEY = 'e5e20b17de62d5a60669623e09d8690f';\nconst URL = 'https://api.themoviedb.org/3/';\n\nexport function getMovies() {\n  return fetch(`${URL}trending/movie/day?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n}\n\nexport function getMoviesById(id) {\n  return fetch(`${URL}movie/${id}?api_key=${API_KEY}`).then(res => res.json());\n}\n\nexport function getMoviesBySearch(query) {\n  return fetch(\n    `${URL}search/movie?api_key=${API_KEY}&query=${query}&language=en-US`\n  ).then(res => res.json());\n}\n\nexport function getMoviesCast(id) {\n  return fetch(`${URL}movie/${id}/credits?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n}\n\nexport function getMoviesReview(id) {\n  return fetch(`${URL}movie/${id}/reviews?api_key=${API_KEY}`).then(res =>\n    res.json()\n  );\n}\n"],"names":["useState","castMovie","setCastMovie","movieId","useParams","useEffect","getMoviesCast","then","data","cast","catch","console","log","length","className","css","map","id","name","actor","profile_path","src","alt","width","API_KEY","URL","getMovies","fetch","res","json","getMoviesById","getMoviesBySearch","query","getMoviesReview"],"sourceRoot":""}